package com.fullstack.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;

import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.fullstack.dto.AuthenticationRequest;
import com.fullstack.dto.AuthenticationResponse;
import com.fullstack.security.JwtService;

@RestController
@RequestMapping("/auth")
public class AuthController {

    @Autowired
    private UserDetailsService userDetailsService;

    @Autowired
    private AuthenticationManager authenticationManager;

    @Autowired
    private JwtService jwtService;

    @PostMapping("/login")
    public String authenticateAndGetToken(@RequestBody AuthenticationRequest request) {
    	return jwtService.generateToken(request.getEmail());
    }
//    public ResponseEntity<AuthenticationResponse> login(@RequestBody AuthenticationRequest request) {
//        System.out.println("--------" + request.getEmail());
//        doAuthenticate(request.getEmail(), request.getPassword());
//
////        UserDetails userDetails = userDetailsService.loadUserByUsername(request.getEmail());
//        String token = jwtService.generateToken(request.getEmail());
//
//        AuthenticationResponse response = AuthenticationResponse.builder()
//        	    .token(token)
//        	    .userName(request.getEmail())
//        	    .build();
//
//
//        return new ResponseEntity<>(response, HttpStatus.OK);
//    }
//
//    private void doAuthenticate(String email, String password) {
//        System.out.println("indoaut------------" + email + "-------" + password);
//        UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(email, password);
//        try {
//            authenticationManager.authenticate(authentication);
//        } catch (BadCredentialsException e) {
//            throw new BadCredentialsException("Invalid Username or Password!!");
//        }
//    }
//
//    @ExceptionHandler(BadCredentialsException.class)
//    public String exceptionHandler() {
//        return "Credentials Invalid!!";
//    }
}
